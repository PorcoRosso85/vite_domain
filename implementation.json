{
  "graphLibrary": {
    "library": "antv/g6",
    "version": "v4.8.21",
    "purpose": "グラフの可視化とインタラクションを実現",
    "caution": "テスト中のバージョン。適切なバージョンの提案も受け付ける"
  },
  "basicConcepts": {
    "node": "編集可能なデータを持つ要素",
    "edge": "ノード間の関係性を示す",
    "der": "depender、親ノードとしても機能する",
    "dee": "dependee、子ノードとしても機能する"
  },
  "graphFormat": {
    "format": "lsif形式",
    "parentChildRelationship": "lsifのエッジ情報で定義する"
  },
  "displaySettings": {
    "nodes": {
      "derAndDee": "両方が円形で表示され、接触する形で視覚化される",
      "color": "全色を使用し、同世代のノードは異なるカラーで、上位世代の色を優先して選択する",
      "impl": ["graph.node(nodeFn)"]
    },
    "edges": {
      "colorIntensity": "接続するノードによって色の強度が異なる",
      "impl": ["graph.edge(edgeFn)"]
    },
    "grouping": "g6のhull機能でderとdeeのエリアをグループ化し視覚化する",
    "impl": ["graph.combo(comboFn)"]
  },
  "interactions": {
    "click": {
      "singleClick": {
        "action": "ノードの詳細情報をwebcomponentで表示",
        "implementation": "webcomponentで行う",
        "impl": {
          "graph.on(event, callback)": {
            "why": "クリックイベントを検知し、指定された動作を実行するため"
          }
        }
      },
      "doubleClick": {
        "der": {
          "action": "1次下層のdeeを右側に表示",
          "area": "derのhullエリア内",
          "impl": {
            "graph.on(event, callback)": {
              "why": "ダブルクリックイベントを検知し、指定された動作を実行するため"
            }
          }
        },
        "emptySpace": {
          "action": "全der, deeが画面に収まるように表示",
          "impl": {
            "graph.on(event, callback)": {
              "why": "グラフの空白部分のダブルクリックイベントを検知するため"
            }
          }
        }
      }
    },
    "drag": {
      "action": "グラフ内を自由に移動できる",
      "impl": {
        "graph.on(event, callback)": {
          "why": "ドラッグイベントを検知し、指定された動作を実行するため"
        }
      }
    },
    "tooltip": {
      "implementation": "g6の組み込みモードを使用せず、カスタムwebcomponentを利用",
      "impl": {
        "graph.on(event, callback)": {
          "why": "ツールチップを表示するトリガーとしてのノード上のホバーイベントを検知するため"
        }
      }
    }
  },
  "focusAndZoom": {
    "focus": {
      "description": "クリックされたノードやエッジが中心に、関連要素が周りに配置",
      "impl": {
        "graph.focusItem(item, true)": {
          "why": "指定したアイテム（ノードまたはエッジ）を中心に配置し、その関連要素も適切に配置します。"
        }
      }
    },
    "zoom": {
      "range": "50%~200%",
      "method": "マウスホイールやタッチのピンチ操作で実現",
      "impl": {
        "graph.zoomTo(ratio)": {
          "why": "指定された比率に基づいてグラフをズームします。"
        },
        "graph.on('wheelzoom', callback)": {
          "why": "マウスホイールでのズーム操作を捕捉するためのイベントリスナー。"
        }
      }
    },
    "errorHandling": {
      "display": "webcomponentを使用した小さなアラート",
      "userAction": "ユーザーはエラーメッセージに従ってノードを編集可能",
      "helpLink": "エラーが発生した場合、ヘルプリンクが提供される",
      "impl": {
        "graph.on(event, callback)": {
          "why": "エラーの状態やイベントを検出するための機能"
        },
        "graph.setItemState(item, state, enabled)": {
          "why": "ユーザーがノードの状態を編集するための機能"
        }
      }
    },
    "uxDetails": {
      "nodeDetailPopup": {
        "design": "中央表示、webcomponentでの実装",
        "size": "300px x 200px",
        "colorScheme": "白背景&黒テキスト",
        "impl": {
          "graph.on(event, callback)": {
            "why": "ノードをクリックしたときなどのイベントを処理し、詳細ポップアップを表示するために使用される"
          },
          "graph.node(nodeFn)": {
            "why": "ノードのスタイルやその他の設定を指定するために使用される"
          }
        }
      }
    },
    "dataStructure": {
      "desc": "lsifのエッジ情報を元に、ノードの親子関係が定義される。ノードには直列や並列の情報が存在する。"
    },
    "performance": {
      "desc": "グラフの読み込みや描画、インタラクションが快適な速度で行える。"
    },
    "responsiveness": {
      "desc": "特定のデバイスや画面サイズに最適化されており、表示やインタラクションがスムーズに行える。"
    }
  },
  "testCases": {
    "graphLibrary": [
      "antv/g6 ライブラリが正しくインストールされていることを確認",
      "指定バージョン (v4.8.21) が利用されていることを確認"
    ],
    "basicConcepts": [
      "ノードが正しくデータを持っているか確認",
      "エッジがノード間の関係性を正確に示すか確認",
      "depender (der) が親ノードとして機能するか確認",
      "dependee (dee) が子ノードとして機能するか確認"
    ],
    "graphFormat": [
      "lsif形式のデータを正しく解析できるか確認",
      "親子関係がlsifのエッジ情報に基づいて正しく形成されるか確認"
    ],
    "displaySettings": [
      "ノードが円形で表示されるか確認",
      "同世代のノードが異なる色で表示されるか確認",
      "エッジの色の強度が接続するノードに応じて正確に変化するか確認"
    ],
    "interactions": [
      "ノードをシングルクリックしたとき、詳細情報がwebcomponentで表示されるか確認",
      "ノードをダブルクリックしたとき、1次下層のdeeが正しく表示されるか確認",
      "グラフ内をドラッグして移動できるか確認"
    ],
    "focusAndZoom": [
      "ノードやエッジをクリックしたとき、中心に配置されるか確認",
      "ズーム操作でグラフが50%~200%の範囲で正確にズームされるか確認"
    ],
    "errorHandling": [
      "エラー時にwebcomponentを使用したアラートが表示されるか確認",
      "エラーメッセージに従ってノードを編集できるか確認"
    ],
    "uxDetails": [
      "ノード詳細ポップアップが中央に正確に表示されるか確認",
      "ポップアップのサイズと色が正しいか確認"
    ],
    "dataStructure": [
      "ノードの親子関係がlsifのエッジ情報を元に正確に形成されるか確認"
    ],
    "performance": [
      "大量のデータを読み込んだとき、グラフの読み込みや描画が適切な速度で行われるか確認"
    ],
    "responsiveness": [
      "異なるデバイスや画面サイズでの表示とインタラクションが正確に行われるか確認"
    ]
  }
}
